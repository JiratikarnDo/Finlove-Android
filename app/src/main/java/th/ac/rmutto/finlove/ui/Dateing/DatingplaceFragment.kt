package th.ac.rmutto.finlove.ui.Dateing

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.*
import androidx.fragment.app.Fragment
import th.ac.rmutto.finlove.Place
import th.ac.rmutto.finlove.R
import android.content.Intent
import th.ac.rmutto.finlove.ChatActivity




class DatingPlaceFragment : Fragment() {
    private lateinit var txtTitle: TextView
    private lateinit var txtDescription: TextView
    private lateinit var txtLocation: TextView
    private lateinit var imagePlace: ImageView
    private lateinit var btnNext: ImageButton
    private lateinit var btnPrev: ImageButton
    private lateinit var btnDate: Button

    private var currentIndex = 0
    private lateinit var placeList: List<Place>
    private val userLat = 13.7563
    private val userLng = 100.5018


    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        val view = inflater.inflate(R.layout.item_datingplace, container, false)
        val matchID = arguments?.getInt("matchID") ?: -1
        val senderID = arguments?.getInt("senderID") ?: -1
        val nickname = arguments?.getString("nickname") ?: "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠"
        val btnBackToChat: Button = view.findViewById(R.id.button2)


        txtTitle = view.findViewById(R.id.txtPlacetitle)
        txtDescription = view.findViewById(R.id.txtplaceDescription)
        txtLocation = view.findViewById(R.id.txtPlacelocat)
        imagePlace = view.findViewById(R.id.imageplaceview)
        btnNext = view.findViewById(R.id.imageButtonnext)
        btnPrev = view.findViewById(R.id.imageButtonback)
        btnDate = view.findViewById(R.id.button)


        placeList = listOf(
            Place("‡∏ó‡πâ‡∏≠‡∏á‡∏ü‡πâ‡∏≤‡∏à‡∏≥‡∏•‡∏≠‡∏á", "‡∏ó‡πâ‡∏≠‡∏á‡∏ü‡πâ‡∏≤‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÄ‡∏≠‡∏Å‡∏°‡∏±‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏≠‡∏î‡∏Æ‡∏¥‡∏ï‡∏û‡∏ß‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà", "‡πÉ‡∏Å‡∏•‡πâ BTS ‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£", 13.7563, 100.5018, R.drawable.skyroom_pic),
            Place("‡∏™‡∏ß‡∏ô‡πÄ‡∏ö‡∏ç‡∏à‡∏Å‡∏¥‡∏ï‡∏ï‡∏¥", "‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏£‡πà‡∏°‡∏•‡∏∑‡πà‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏™‡∏á‡∏ö‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô ‡∏õ‡∏±‡πà‡∏ô‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡πà‡∏á‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢", "‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó 39", 13.7350, 100.5432, R.drawable.benjakiti_park),
            Place("‡∏™‡∏¢‡∏≤‡∏°‡∏û‡∏≤‡∏£‡∏≤‡∏Å‡∏≠‡∏ô", "‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏π‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏£‡∏ß‡∏°‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡∏î‡∏±‡∏á ‡πÇ‡∏£‡∏á‡∏´‡∏ô‡∏±‡∏á ‡∏û‡∏¥‡∏û‡∏¥‡∏ò‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ô‡πâ‡∏≥ ‡πÅ‡∏•‡∏∞‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≥", "991 ‡∏ñ‡∏ô‡∏ô‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 1 ‡πÅ‡∏Ç‡∏ß‡∏á‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô ‡πÄ‡∏Ç‡∏ï‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ 10330", 13.745972, 100.534423, R.drawable.siam_paragon)
        )

        showPlace(currentIndex)

        btnNext.setOnClickListener {
            if (currentIndex < placeList.size - 1) {
                currentIndex++
                showPlace(currentIndex)
            } else {
                Toast.makeText(requireContext(), "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß", Toast.LENGTH_SHORT).show()
            }
        }

        btnPrev.setOnClickListener {
            if (currentIndex > 0) {
                currentIndex--
                showPlace(currentIndex)
            } else {
                Toast.makeText(requireContext(), "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å‡πÅ‡∏•‡πâ‡∏ß", Toast.LENGTH_SHORT).show()
            }
        }

        btnDate.setOnClickListener {
            val place = placeList[currentIndex]
            val message = "‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏î‡∏µ‡∏ô‡∏∞ ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡∏•‡∏≠‡∏á‡πÄ‡∏î‡∏ó‡∏Å‡∏±‡∏ö‡∏â‡∏±‡∏ô‡πÑ‡∏´‡∏°?\n\n" +
                    "üìç ${place.title}\n" +
                    "üìù ${place.description}\n" +
                    "üåê ‡∏û‡∏¥‡∏Å‡∏±‡∏î: ${txtLocation.text}"

            val dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.dialog_confirm_date, null)
            val dialog = android.app.Dialog(requireContext())
            dialog.setContentView(dialogView)
            dialog.setCancelable(true)

            val txtTitle = dialogView.findViewById<TextView>(R.id.txtDialogTitle)
            val txtMessage = dialogView.findViewById<TextView>(R.id.txtDialogMessage)
            val btnConfirm = dialogView.findViewById<Button>(R.id.btnConfirm)
            val btnCancel = dialogView.findViewById<Button>(R.id.btnCancel)

            txtMessage.text = "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏ß‡∏ô‡∏≠‡∏µ‡∏Å‡∏ù‡πà‡∏≤‡∏¢‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?\n\nüìç ${place.title}"

            btnConfirm.setOnClickListener {
                dialog.dismiss()
                val intent = Intent(requireContext(), ChatActivity::class.java).apply {
                    putExtra("matchID", arguments?.getInt("matchID") ?: -1)
                    putExtra("senderID", arguments?.getInt("senderID") ?: -1)
                    putExtra("nickname", arguments?.getString("nickname") ?: "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠")
                    putExtra("autoMessage", message)
                }
                startActivity(intent)
            }

            btnCancel.setOnClickListener {
                dialog.dismiss()
            }

            dialog.show()
        }

        btnBackToChat.setOnClickListener {
            requireActivity().onBackPressed()
        }


        return view
    }

    private fun showPlace(index: Int) {
        val place = placeList[index]
        txtTitle.text = place.title
        txtDescription.text = place.description
        imagePlace.setImageResource(place.imageResId)

        val distance = calculateDistance(userLat, userLng, place.latitude, place.longitude)
        val distanceText = String.format("‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏â‡∏±‡∏ô %.2f ‡∏Å‡∏°.", distance / 1000)
        txtLocation.text = distanceText
    }

    private fun calculateDistance(
        userLat: Double,
        userLng: Double,
        placeLat: Double,
        placeLng: Double
    ): Float {
        val userLocation = android.location.Location("").apply {
            latitude = userLat
            longitude = userLng
        }
        val placeLocation = android.location.Location("").apply {
            latitude = placeLat
            longitude = placeLng
        }
        return userLocation.distanceTo(placeLocation)
    }
}
